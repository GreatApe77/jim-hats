// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int            @id @default(autoincrement())
  username       String         @unique @db.VarChar(255)
  email          String         @unique @db.VarChar(255)
  password       String         @db.VarChar(255)
  profilePicture String?        @map("profile_picture") @db.VarChar(255)
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")
  gymChallenges  GymChallenge[]
  ExerciseLog    ExerciseLog[]

  @@map("users")
}

model GymChallenge {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String
  image       String?
  createdAt   DateTime      @default(now()) @map("created_at")
  startAt     DateTime      @map("start_at")
  endAt       DateTime      @map("end_at")
  creatorId   Int           @map("creator_id")
  members     User[]
  logs        ExerciseLog[]

  @@map("gym_challenges")
}

model ExerciseLog {
  id             Int          @id @default(autoincrement())
  title          String       @db.VarChar(255)
  description    String?
  image          String?
  date           DateTime
  user           User         @relation(fields: [userId], references: [id])
  gymChallenge   GymChallenge @relation(fields: [gymChallengeId], references: [id])
  userId         Int @map("user_id")
  gymChallengeId Int @map("gym_challenge_id")

  @@map("exercise_logs")
}
